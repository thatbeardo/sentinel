export const creatingResources = `

## Creating Resources

As seen previously, \`resources\` are nouns in your applications. In the example above this means that each employee is a \`resource\` in the Sentinel realm. Further, since we need gated access to salaries, we make a salary resource too. We must first go ahead and create all 3 employees and the salary resource. Use the following curl commands to create Employees Danny, Rusty, and Linus. 

\`\`\`
curl -X POST "https://sentinelbeta.herokuapp.com/v1/resources/" -H "accept: application/json" -H "x-sentinel-tenant: $TENANT" -H "Authorization: bearer  $ACCESS_TOKEN" -H "Content-Type: application/json" -d "{ "data": { "attributes": { "name": "danny", "source_id": "danny@ecommerce.com" }, "type": "resource" }}"
\`\`\`

The result of creating a new resource looks something like this:

\`\`\`JSON
{
  "data": {
    "id": "528961a8-56e2-4cfa-8825-0ff83036a333",
    "type": "resource",
    "attributes": {
      "name": "danny",
      "source_id": "danny@ecommerce.com",
      "context_id": ""
    },
    "relationships": {
      "parent": {
        "data": {
          "type": "resource",
          "id": "3d17e5eb-1fb3-4a23-8bb0-e374d6184659"
        }
      }
    }
  }
}
\`\`\`
Take a note the \`id\` field. This is a UUID generated by Sentinel to track Danny. We will use this when creating contexts in the second step. 

\`\`\`
curl -X POST "https://sentinelbeta.herokuapp.com/v1/resources/" -H "accept: application/json" -H "x-sentinel-tenant: $TENANT" -H "Authorization: bearer  $ACCESS_TOKEN" -H "Content-Type: application/json" -d "{ "data": { "attributes": { "name": "rusty", "source_id": "rusty@ecommerce.com" }, "type": "resource" }}"
\`\`\`

\`\`\`
curl -X POST "https://sentinelbeta.herokuapp.com/v1/resources/" -H "accept: application/json" -H "x-sentinel-tenant: $TENANT" -H "Authorization: bearer  $ACCESS_TOKEN" -H "Content-Type: application/json" -d "{ "data": { "attributes": { "name": "linus", "source_id": "linus@ecommerce.com" }, "type": "resource" }}"
\`\`\`

Alternatively, you can use the swagger page found [here](https://sentinelbeta.herokuapp.com/swagger/index.html). If you decide to use the swagger page, remember to set the authorization header. You can do this by clicking on the \`Authorize\` button and entering \`bearer YOUR_ACCESS_TOKEN\` in the value field. 

Great! Now Sentinel tracks these 3 newly created employees for you. Our use case dictates that Danny should have \`read\` and \`write\` permissions to the salaries while Rusty and Linus only have \`read\` permission set. Before we can set these permissions, we need to create the salary resource. Let's do that. 

\`\`\`
curl -X POST "https://sentinelbeta.herokuapp.com/v1/resources/" -H "accept: application/json" -H "x-sentinel-tenant: $TENANT" -H "Authorization: bearer  $ACCESS_TOKEN" -H "Content-Type: application/json" -d "{ "data": { "attributes": { "name": "salary", "source_id": "salary-source" }, "type": "resource" }}"
\`\`\``