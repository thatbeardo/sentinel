name: Sentinel Community Deployment

on:
  push:
    branches: [master]

jobs:
  terraform:
    runs-on: ubuntu-18.04
    steps:

    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1
    
    # - name: Build, tag, and push image to Amazon ECR
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: sentinel-community
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     cd apis/sentinel
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # - name: Terraform Apply
    #   id: terraform-apply
    #   run: |
    #     cd infrastructure/dev
    #     terraform init
    #     terraform plan
    #     terraform apply -var 'app_image=${{ steps.build-image.outputs.image }}' -auto-approve
    #     terraform output website_bucket_id

    # - name: Terraform Destroy
    #   id: terraform-destroy
    #   run: |
    #     cd infrastructure/dev
    #     terraform init
    #     terraform plan
    #     terraform destroy -auto-approve
    
    # - name: Install Yarn
    #   uses: borales/actions-yarn@v2.1.0

    # - name: Install AWS CLI
    #   uses: chrislennon/action-aws-cli@v1.1
    
    # - name: Build Website
    #   run: |
    #     cd app
    #     yarn install
    #     yarn build
          
    # - name: Deploy Website
    #   run: |
    #     cd app
    #     aws s3 sync ./build/ s3://${{ steps.terraform-apply.outputs.stdout }}