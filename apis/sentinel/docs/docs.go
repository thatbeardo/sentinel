// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/contexts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a context by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contexts"
                ],
                "summary": "Get context by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "context ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/context.OutputDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a context by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contexts"
                ],
                "summary": "Delete a context by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "context ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Polciy name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contexts"
                ],
                "summary": "Update a context by it's ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "context ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New name to be assigned to an existing context",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/context.Input"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/context.OutputDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/grants/resources/{resource_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Shows all Principal access to Target Resources managed through a context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Grants"
                ],
                "summary": "Shows all Principal access to Target Resources managed through a context",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "resource_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/grant.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/grants/resources/{resource_id}/contexts/{context_id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a grant for a context on a resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Grants"
                ],
                "summary": "Update a grant that permits a context on a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "context ID",
                        "name": "context_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "resource_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details about the Grant to be added",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grant.Input"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/grant.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "Allows the user to fetch an access_token and make authenticated requests to Sentinel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Fetch access token to make authenticated requests to the API",
                "parameters": [
                    {
                        "description": "ClientID and ClientSecret needed to authenticate a users identity",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.ClientCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/login.BearerToken"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/permissions/{context_id}/resources": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all Permissions for all Target Resources in context.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "List all Permissions for all Target Resources in context.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "context ID",
                        "name": "context_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/permission.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/permissions/{context_id}/resources/{resource_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all permissions for a context for a given target",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "List all permissions for a context for a given target",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "context ID",
                        "name": "context_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "resource_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/permission.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a permission for a context on a resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Update a permission that permits acontext on a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "context ID",
                        "name": "context_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "resource_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Details about the permission to be added",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/permission.Input"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/permission.OutputDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/permissions/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a permission by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete a permission by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Permission Details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Update a Permission by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New name to be assigned to an existing permission",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/permission.Input"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/permission.OutputDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/principal/{principal_id}/authorization": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Shows all the permissions this principal has to provided target resources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Get authorization details about a principal.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Principal ID",
                        "name": "principal_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name of the permissions which allow access to the target",
                        "name": "permissions",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name of the targtes to which a permission allows access",
                        "name": "targets",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Context through which authorization is determined",
                        "name": "context_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Limit your search results.",
                        "name": "depth",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include permissions that have deny permit fields set",
                        "name": "include_denied",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/authorization.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/resources": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all the resources stored",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Get all the resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired tenant - environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/resource.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/resources/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new resource to existing resources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Create a new Resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired tenant - environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Resource to be created",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource.Input"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/resource.OutputDetails"
                        }
                    },
                    "500": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/resources/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a resource by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Get resource by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired tenant - environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/resource.OutputDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a resource by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Delete a resource by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update resource name, sourceID, parent, etc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Update a resource by it's ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Resource to be created",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resource.Input"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/resource.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        },
        "/v1/resources/{id}/contexts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all context and details that are granted to this context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Get all contexts granted to this resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired tenant - environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/context.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Grant a new context to an existing principal resources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Associate a new context with an existing resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Desired tenant - environment",
                        "name": "x-sentinel-tenant",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Principal Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant requesting the operation",
                        "name": "claimant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "context to be created",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/context.Input"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/context.OutputDetails"
                        }
                    },
                    "500": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/views.ErrView"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authorization.Details": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/resource.Attributes"
                },
                "id": {
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/authorization.Relationships"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "resource"
                    ]
                }
            }
        },
        "authorization.Output": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authorization.Details"
                    }
                }
            }
        },
        "authorization.Permissions": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permission.Attributes"
                    }
                }
            }
        },
        "authorization.Relationships": {
            "type": "object",
            "properties": {
                "permissions": {
                    "$ref": "#/definitions/authorization.Permissions"
                }
            }
        },
        "context.Attributes": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "context.Details": {
            "type": "object",
            "required": [
                "attributes",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/context.Attributes"
                },
                "id": {
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/context.Relationships"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "context"
                    ]
                }
            }
        },
        "context.Input": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/context.InputDetails"
                }
            }
        },
        "context.InputDetails": {
            "type": "object",
            "required": [
                "attributes",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/context.Attributes"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "context"
                    ]
                }
            }
        },
        "context.Output": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/context.Details"
                    }
                }
            }
        },
        "context.OutputDetails": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/context.Details"
                }
            }
        },
        "context.Relationship": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/context.Resource"
                    }
                }
            }
        },
        "context.Relationships": {
            "type": "object",
            "required": [
                "principals",
                "target_resources"
            ],
            "properties": {
                "principals": {
                    "$ref": "#/definitions/context.Relationship"
                },
                "target_resources": {
                    "$ref": "#/definitions/context.Relationship"
                }
            }
        },
        "context.Resource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "resource"
                    ]
                }
            }
        },
        "grant.Attributes": {
            "type": "object",
            "required": [
                "with_grant"
            ],
            "properties": {
                "with_grant": {
                    "type": "boolean"
                }
            }
        },
        "grant.Data": {
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "grant"
                    ]
                }
            }
        },
        "grant.Details": {
            "type": "object",
            "required": [
                "attributes",
                "context",
                "principal",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/grant.Attributes"
                },
                "context": {
                    "$ref": "#/definitions/grant.Relationship"
                },
                "id": {
                    "type": "string"
                },
                "principal": {
                    "$ref": "#/definitions/grant.Relationship"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "grant"
                    ]
                }
            }
        },
        "grant.Input": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/grant.InputDetails"
                }
            }
        },
        "grant.InputDetails": {
            "type": "object",
            "required": [
                "attributes",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/grant.Attributes"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "grant"
                    ]
                }
            }
        },
        "grant.Output": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grant.Details"
                    }
                }
            }
        },
        "grant.Relationship": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/grant.Data"
                }
            }
        },
        "login.BearerToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "login.ClientCredentials": {
            "type": "object",
            "required": [
                "client_id",
                "client_secret"
            ],
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                }
            }
        },
        "permission.Attributes": {
            "type": "object",
            "required": [
                "name",
                "permitted"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "permitted": {
                    "type": "string"
                }
            }
        },
        "permission.Details": {
            "type": "object",
            "required": [
                "attributes",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/permission.Attributes"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "permission"
                    ]
                }
            }
        },
        "permission.Input": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/permission.InputDetails"
                }
            }
        },
        "permission.InputDetails": {
            "type": "object",
            "required": [
                "attributes",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/permission.Attributes"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "permission"
                    ]
                }
            }
        },
        "permission.Output": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permission.Details"
                    }
                }
            }
        },
        "permission.OutputDetails": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/permission.Details"
                }
            }
        },
        "resource.Attributes": {
            "type": "object",
            "required": [
                "source_id"
            ],
            "properties": {
                "context_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                }
            }
        },
        "resource.Contexts": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Data"
                    }
                }
            }
        },
        "resource.Data": {
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "resource"
                    ]
                }
            }
        },
        "resource.Details": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/resource.Attributes"
                },
                "id": {
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/resource.Relationships"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "resource"
                    ]
                }
            }
        },
        "resource.Input": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/resource.InputDetails"
                }
            }
        },
        "resource.InputDetails": {
            "type": "object",
            "required": [
                "attributes",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/resource.Attributes"
                },
                "relationships": {
                    "$ref": "#/definitions/resource.InputRelationships"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "resource"
                    ]
                }
            }
        },
        "resource.InputRelationships": {
            "type": "object",
            "required": [
                "parent"
            ],
            "properties": {
                "parent": {
                    "$ref": "#/definitions/resource.Parent"
                }
            }
        },
        "resource.Output": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Details"
                    }
                }
            }
        },
        "resource.OutputDetails": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/resource.Details"
                }
            }
        },
        "resource.Parent": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/resource.Data"
                }
            }
        },
        "resource.Relationships": {
            "type": "object",
            "properties": {
                "contexts": {
                    "$ref": "#/definitions/resource.Contexts"
                },
                "parent": {
                    "$ref": "#/definitions/resource.Parent"
                }
            }
        },
        "views.ErrView": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/views.Source"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "views.Source": {
            "type": "object",
            "properties": {
                "parameter": {
                    "type": "string"
                },
                "pointer": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Sentinel API",
	Description: "### A domain agnostic permission management and querying API. to manage\n\nAt the most basic level the Sentinel API offers a way for consumers to manage access of application resources to other application resources through the use of contexts.\n\nA simple example demonstrating this flexibility of this relationship could be:\n\nUser (U1) has a context (P1) granting read/write access to an account Resource (R)\nUser (U2) has a context (P2) granting read access to the same account Resource (R)\n\nThe application can then query the api asking if (U1) can preform write access on (R) which will return True\nThe application can also query the api asking if (U2) can perform write access on (R) which will return False\n\nMore advanced capabilities include:\n* Inheritance - Resource access granted to a parent permits the same access to all children\n* Invitations - This model allows users having `with_grant` permissions to invite other users to join in a self-service way\n* Context - Users with multiple contexts can have differing permission. The api permits the caller to specify context when performing permission checks.\n\n## Resources\n---\nSimply stated a resource represents the nouns in your application. Resources are polymorphic and might represent users,\naccounts, or any application specific entity requiring gated access.\n\nResources are granted access to other resources through Contexts. It is possible for a resource to be the\n`principal` in once context while simultaneously a `target_resource` in another context.\n\n\n_See definitions below for further explanation of principals and target_resources._\n\n\nResource may be owned by other resources. Resource inheritance will help reduce redundant permissions to similar resources\nif the principal has the same level of access to a class of resource. E.g. System Admins can read/write all accounts.\n\n**Precedence is determined by path length.** - In the event a resource has two contexts with conflicting permission\nto a resource, the path with the shortest distance to the resource is preferred.\n\n#### Example:\n---\n**Given:**\n\nThe following resources exist - Parent Resource (PR), Child Resource (CR), Principal (P)\n\n**AND**\n\nThe following Contexts exist - context (P1), context (P2)\n\n**AND**\n\nParent Resource (PR) owns Child Resource (CR)\n\n**AND**\n\nPrincipal (P) has a context (P1) explicitly denying a permission, say \"read\", to (PR)\n\n**AND**\n\nPrincipal (P) has a context (P2) allowing the same permission, \"read\", to (CR)\n\n**Conclusion:**\n(P) can not read (PR)\n(P) can read (CR)\n\nIn the event there are two contexts from a principal directly to a resource with conflicting permission, the permission\ncheck will fail close and access will be denied.\n\n#### Example:\n---\n**Given:**\n\nThe following resources exist - Child Resource (R), Principal (P)\n\n**AND**\n\nThe following Contexts exist - context (P1), context (P2)\n\n**AND**\n\nPrincipal (P) has a context (P1) explicitly denying a permission, say \"read\", to (R)\n\n**AND**\n\nPrincipal (P) has a context (P2) allowing the same permission, \"read\", to (R)\n\n**Conclusion:**\n(P) can not read (R)\n\n## Contexts\n\n---\nContexts `allow` or `deny` permissions to principals on target resources. A single context can be granted to zero or\nmore principals and affect zero or more target resources.\n\nA context contains zero or more permissions to target resources. A permission is always scoped to a single target resource within the context.\nHowever, it is possible to grant the same permission to multiple target resources, or grant multiple permissions to\none target resource within the context of a single context.\n\nEach grant of a context to a principal contains a `with_grant` boolean allowing the aforementioned principal to\npropagate their permissions to additional principals if the `with_grant` option has been set to `true`.\nBy default `with_grant=false`.\n\n## Permissions\n---\nA permission defines access to perform an action between a context and a Resource.\nPermissions take simply a `name` and whether the permission is `permitted`.\nThe `name` is used to determine a principal\\'s authorization to a target resource.\n\nPermission Rules:\n* A permission can have `permitted: \"allow\"` which grants all `principals` of the context access to the `target_resource` for that permission.\n* A permission can have `permitted: \"deny\"` which prevents all `principals` of the context from performing the permission action the `target_resource` for that permission.\n* A permission can be `revoked` which will remove the `allow` or `deny` constraint. Access may then be based on the inheritance rules described above.\n* There is a unique constraint on the `(context.id, Permission.name, Resource.id)` tuple.\n\n### Definitions\n|Entity|Definition|\n|------|----------|\n|Resource|Any noun in your application. Resources (principals) access other Resources (target resource) through contexts.|\n|context|A named collection of permissions. Contexts are granted to resources (principals) and grant or deny access to affect resources (target resources) through permissions.|\n|Permission|An explicit allowance or refusal of a resource (principal) to perform an action on a resource (target resource).|\n|Principal|In the context of a context the principal refers to the resource which has been granted access to make use of the context.|\n|Target Resource|In the context of a context a target resource is any and all resources which the context allows or denies access through Permissions.|\n\n### Getting Started\nReview the [Getting Started Guide](http://localhost:3000/documentation/GettingStarted.md) for minimal setup instructions",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
